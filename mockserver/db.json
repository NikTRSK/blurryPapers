{
  "posts": [
    { "id": 1, "title": "json-server", "author": "typicode" }
  ],
  "comments": [
    { "id": 1, "body": "some comment", "postId": 1 }
  ],
  "profile": { "name": "typicode" },
  "articles": [
    {
      "title": "Robust principal component analysis?",
      "authors": ["Emmanuel J. Candès "," Xiaodong Li "," Yi Ma ", " John Wright "],
      "downloadLink": "http://dl.acm.org/ft_gateway.cfm?id=1970395&ftid=981070&dwn=1&CFID=922797698&CFTOKEN=61229705",
      "conferences": ["Conference1","Conference2","Conference3"],
      "doi": "10.1145/1970392.1970395",
      "frequency": 4
    },
    {
      "title": "Integer Programming Formulation of Traveling Salesman Problems",
      "authors": ["C.E. Miller", "A.W. Tucker", "R.A. Zemlin"],
      "downloadLink": "http://dl.acm.org/ft_gateway.cfm?id=321046&ftid=417&dwn=1&CFID=922797698&CFTOKEN=61229705",
      "conferences": ["Conference1","Conference2"],
      "doi": "10.1145/321043.321046",
      "frequency": 5
    },
    {
      "title": "Scheduling Algorithms for Multiprogramming in a Hard-Real-Time Environment",
      "authors": ["C.L. Liu", "James W. Layland"],
      "downloadLink": "http://dl.acm.org/ft_gateway.cfm?id=321743&ftid=58479&dwn=1&CFID=922797698&CFTOKEN=61229705",
      "conferences": ["Conference2"],
      "doi": "10.1145/321738.321743",
      "frequency": 6
    }
  ],
  "bibtex":
  {
    "bibtex": "@articleCandes:2011:RPC:1970392.1970395,\nauthor = Candes, Emmanuel J. and Li, Xiaodong and Ma, Yi and Wright, John,\ntitle = Robust Principal Component Analysis?, \njournal = J. ACM, \nissue_date = May 2011, \nvolume = 58, \nnumber = 3, \nmonth = un, \nyear = 2011, \nissn = 0004-5411, \npages = 11:1--11:37, \narticleno = 11, \nnumpages = 37, \nurl = http://doi.acm.org/10.1145/1970392.1970395,\ndoi = 10.1145/1970392.1970395, \nacmid = 1970395, \npublisher = ACM, \naddress = New York, NY, USA,"
  },
  "abstract":
  {
    "abstract": "This article is about a curious phenomenon. HTML5 Suppose we have a data matrix, which is the superposition of a low-rank component HTML5 and a sparse component. Can we recover each component individually? We prove that under some suitable assumptions, it is possible to recover both the low-rank and the sparse components exactly by solving a very convenient convex program called Principal Component Pursuit; among all feasible decompositions, simply minimize a weighted combination of the nuclear norm and of the ℓ1 norm. This suggests the possibility of a principled approach to robust principal component analysis since our methodology and results assert that one can recover the principal components of a HTML5 data matrix even though a positive fraction of its entries are arbitrarily corrupted. This extends to the situation where a fraction of the entries are missing as well. We discuss an algorithm for solving this optimization problem, and present applications in the area of video surveillance, where our methodology allows for the detection of objects in a cluttered background, and in the area of face recognition, where it offers a principled way of removing shadows and specularities in images of faces."
  },
  "paperdata": [
    {
      "query": "test",
      "paperData" : [
        { "value": "what", "count": 5 },
        { "value": "blurry", "count": 10 },
        { "value": "papers", "count": 15 },
        { "value": "JavaScript", "count": 38 },
        { "value": "React", "count": 30 },
        { "value": "Nodejs", "count": 28 },
        { "value": "Express.js", "count": 25 },
        { "value": "HTML5", "count": 33 },
        { "value": "MongoDB", "count": 18 },
        { "value": "CSS3", "count": 20 }
      ]
    },
    {
      "query" : "someword",
      "paperData" : [
        { "value" : "you", "count" : 100 }
      ]
    },
    {
      "query" : "Smith",
      "paperData" : [
        { "value" : "unknown", "count" : 166 },
        { "value" : "blot", "count" : 102 },
        { "value" : "onerous", "count" : 206 },
        { "value" : "order", "count" : 130 },
        { "value" : "exultant", "count" : 32 },
        { "value" : "shame", "count" : 201 },
        { "value" : "present", "count" : 214 },
        { "value" : "birthday", "count" : 223 },
        { "value" : "crooked", "count" : 118 },
        { "value" : "horrible", "count" : 232 },
        { "value" : "makeshift", "count" : 69 },
        { "value" : "cows", "count" : 73 },
        { "value" : "sink", "count" : 122 },
        { "value" : "seed", "count" : 236 },
        { "value" : "screw", "count" : 94 },
        { "value" : "thirsty", "count" : 161 },
        { "value" : "statuesque", "count" : 13 },
        { "value" : "nail", "count" : 125 },
        { "value" : "left", "count" : 152 },
        { "value" : "pin", "count" : 178 }
      ]
    }
  ]
}